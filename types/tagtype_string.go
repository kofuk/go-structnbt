// Code generated by "stringer -type=TagType -output=tagtype_string.go"; DO NOT EDIT.

package types

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TagEnd-0]
	_ = x[TagByte-1]
	_ = x[TagShort-2]
	_ = x[TagInt-3]
	_ = x[TagLong-4]
	_ = x[TagFloat-5]
	_ = x[TagDouble-6]
	_ = x[TagByteArray-7]
	_ = x[TagString-8]
	_ = x[TagList-9]
	_ = x[TagCompound-10]
	_ = x[TagIntArray-11]
	_ = x[TagLongArray-12]
}

const _TagType_name = "TagEndTagByteTagShortTagIntTagLongTagFloatTagDoubleTagByteArrayTagStringTagListTagCompoundTagIntArrayTagLongArray"

var _TagType_index = [...]uint8{0, 6, 13, 21, 27, 34, 42, 51, 63, 72, 79, 90, 101, 113}

func (i TagType) String() string {
	if i >= TagType(len(_TagType_index)-1) {
		return "TagType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TagType_name[_TagType_index[i]:_TagType_index[i+1]]
}
